syntax = "proto3";

package cablemodems;

option go_package = "api-project/grpc-api/gen/cablemodems;cablemodems";

import "common/common.proto";

service CableModemService {
  rpc ByMac(ByMacRequest) returns (ByMacResponse);
  rpc ByCmts(ByCmtsRequest) returns (ByCmtsResponse);
  rpc ByPoller(ByPollerRequest) returns (ByPollerResponse);
  rpc Paged(PagedRequest) returns (PagedResponse);
  rpc HistoricalRegState(HistoricalRegStateRequest) returns (HistoricalRegStateResponse);
  rpc HistoricalCm(HistoricalCmRequest) returns (HistoricalCmResponse);
}

message ByMacRequest {
  repeated string mac_address = 1;
}
message ByMacResponse {
  repeated CableModem modems = 1;
  common.Error error = 2;
}

message ByCmtsRequest {
  string cmts = 1;
  State state = 2;
  DocsisVersion docsis = 3;
  bool single = 4;
}
message ByCmtsResponse {
  repeated CableModem modems = 1;
  common.Error error = 2;
}

message ByPollerRequest {
  string poller = 1;
  string cmts = 2;
  State state = 3;
  DocsisVersion docsis = 4;
}
message ByPollerResponse {
  repeated CableModem modems = 1;
  common.Error error = 2;
}

message PagedRequest {
  CableModemsFilter filter = 1;
  int32 first = 2;
  string after = 3;
}
message PagedResponse {
  repeated CableModem modems = 1;
  string next_cursor = 2;
  common.Error error = 3;
}

message HistoricalRegStateRequest {
  repeated string mac = 1;
  string period = 2;
}
message HistoricalRegStateResponse {
  repeated TsRegStateDevice devices = 1;
  common.Error error = 2;
}

message HistoricalCmRequest {
  repeated string mac = 1;
}
message HistoricalCmResponse {
  repeated TsCmDevice devices = 1;
  common.Error error = 2;
}

message CableModemsFilter {
  string fqdn = 1;
  string mac_domain = 2;
  string ppod_name = 3;
  repeated string mac_address = 4;
}

message CableModem {
  string mac = 1;
  optional string cpe_mac = 2;
  optional string mac_domain = 3;
  optional int32 cable_modem_index = 4;
  optional string config_file = 5;
  optional string model = 6;
  optional string fiber_node = 7;
  optional string ipv4 = 8;
  optional string ipv6 = 9;
  optional string cpe_ipv4 = 10;
  optional string transponder = 11;
  optional DocsisVersion docsis_version = 12;
  optional string ppod = 13;
  optional string fqdn = 14;
  optional State state = 15;
  optional string not_found_date = 16;
  optional int32 reg_state = 17;
  optional string fn_name = 18;
  optional int32 number_of_generators = 19;
  optional string rpd_name = 20;
  optional string updated_at = 21;
  optional string bootr = 22;
  optional string vendor = 23;
  optional string sw_rev = 24;
  optional string olt_name = 25;
  optional string pon_name = 26;
  optional int64 updated_at_ts = 27;
  optional bool is_cpe = 28;
  optional string cmts_type = 29;
  optional int32 device_type = 30;
}

message TsRegStateDevice {
  string mac = 1;
  string reg_state = 2;
  int64 timestamp = 3;
}

message TsCmDevice {
  string mac = 1;
  string status = 2;
  int64 timestamp = 3;
}

enum State {
  UNKNOWN = 0;
  ONLINE = 1;
  OFFLINE = 2;
}

enum DocsisVersion {
  DOCSIS_UNKNOWN = 0;
  DOCSIS3 = 1;
  DOCSIS31 = 2;
  DOCSIS4 = 3;
}
